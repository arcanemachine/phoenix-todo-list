#!/usr/bin/env bash

if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
  echo "This script manages a Compose service for Phoenix + Postgres + Traefik.

The first positional argument must specify the 'docker-compose' command(s) to run.
  - Examples: up, down, restart, etc.

The second positional argument must specify the location of the deployment.
  - Must be one of: local, remote
    - local: no HTTPS
    - remote: uses HTTPS

To use Podman instead of Docker, pass the '--podman' flag as the last positional argument."
  exit
fi

# navigate to containers directory
project_root_directory="$(dirname "$0")/../../.."
containers_directory="$project_root_directory/support/containers"
cd "$containers_directory" || exit 1

# ensure first positional argument is present
if [ "$1" = "" ]; then

  echo "The first positional argument must specify the 'docker-compose' command(s) to run. Examples: up, down, restart, etc.

To use Podman instead of Docker, pass the '--podman' flag as the last positional argumnet."
  exit 1

else
  # move the first arg into a variable and shift it out of args
  action=$1
  shift
fi

# ensure second (first after shifting) positional argument is present
if [ "$1" = "" ] || [ "$1" != "local" ] && [ "$1" != "remote" ]; then
  echo "Error: The second positional argument must specify whether the Traefik container should use a 'local' (no HTTPS) or 'remote' (uses HTTPS) config (without the quotes).

The second positional argument must be one of: local, remote

Aborting..."
  exit 1
else
  local_or_remote=$1

  # shift first positional argument out of args
  shift
fi

# extra actions for handling 'up' action
if [ "$action" = "up" ]; then
  # ensure the network 'traefik-global-proxy' exists
  echo "Creating Docker network: 'traefik-global-proxy'..."
  if [ ! "$(docker network create traefik-global-proxy)" ]; then
    echo "\033[96mThe 'traefik-global-proxy' network already exists.\033[39m"
  fi
fi

# get last arg
for last_arg; do true; done

# determine which container manager to use ('docker compose' or podman-compose)
application_to_run="docker compose"

if [ "$last_arg" = "--podman" ]; then
  # use podman-compose instead of docker
  application_to_run="podman-compose"

  # remove last arg
  set -- "${@:1:$(($# - 1))}"
fi

# run container action
# shellcheck disable=SC2068,SC2086
$application_to_run -f compose.phoenix.yaml -f networks/compose.phoenix-traefik.yaml -f compose.phoenix-config-traefik-$local_or_remote.yaml -f compose.postgres.yaml -f networks/compose.postgres-traefik.yaml -f compose.traefik.yaml -f compose.traefik-config-$local_or_remote.yaml $action $@
