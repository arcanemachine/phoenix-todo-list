#!/usr/bin/env bash

if [ "$1" = "--help" ]; then
  echo "This script manages a Compose service for Prometheus.

The first positional argument must specify the 'docker-compose' command(s) to run.
  - Examples: up, down, restart, etc.

Features:
  - Runs with host networking
  - Accessible via port 9090
  - Uses Docker by default
    - To use Podman instead of Docker, pass the '--podman' flag as the last positional argument."
  exit 1
fi

# navigate to containers directory
project_root_directory="$(dirname "$0")/../../.."
containers_directory="$project_root_directory/support/containers"
cd "$containers_directory" || exit 1

# ensure first positional argument is present
if [ "$1" = "" ]; then
  echo "The first positional argument must specify the 'docker-compose' command(s) to run. Examples: up, down, restart, etc.

To use Podman instead of Docker, pass the '--podman' flag as the last positional argument."
  exit 1
fi

# move the first arg into a variable and shift it out of args
action=$1
shift

# get last arg
for last_arg; do true; done

# extra actions for handling 'up' action
if [ "$action" = "up" ]; then
  # ensure that external volume exists
  container_runtime=docker

  if [ "$last_arg" = "--podman" ]; then
    container_runtime=podman
  fi

  $container_runtime volume create phoenix-todo-list--prometheus
  $container_runtime volume create phoenix-todo-list--grafana
fi

# podman
if [ "$last_arg" = "--podman" ]; then
  # use podman instead of docker
  podman_socket_path=$(podman info --format '{{.Host.RemoteSocket.Path}}')
  maybe_podman_config="-H unix:${podman_socket_path}"

  # remove last arg
  set -- "${@:1:$(($# - 1))}"
fi

# run container action
# shellcheck disable=SC2068,SC2086
docker-compose $maybe_podman_config -f compose.prometheus.yaml -f compose.grafana.yaml $action $@
