#!/bin/sh

# This script bootstraps a copy of .env.override from any currently-exported
# environment variables. If working locally and a copy doesn't exist, you
# will need to create one from the .env.override.example template.
#
# This script's usefulness comes mainly from deployment, when the environment
# variables passed to the Ansible playbook are used to populate the values
# in the config files on the remote server.

project_root=$(dirname "$0")/../../
cd $project_root

env_path="$(pwd)/.env"
env_template_path="$(pwd)/support/scripts/env-generate-template"

if [ -f "$env_path" ]; then
  if [ "$OVERWRITE" = 1 ] || [ "$1" = "--force" ] || [ "$1" = "-f" ]; then
    echo "Overwriting existing file: '$env_path'..."
  elif [ "$DRY_RUN" != 1 ]; then
    echo "File already exists: '$env_path'. Skipping..."
    exit 0
  fi
else
  echo "Generating local environment: '$env_path'..."
fi

if [ "$DRY_RUN" = 1 ]; then
  echo "This is a dry run. Printing to stdout only..."
  echo ""
fi

output_string="$($env_template_path)"

if [ "$DRY_RUN" = 1 ]; then
  echo "$output_string"
else
  # create the .env file
  echo "$output_string" > $env_path

  # set permissions on the newly-created .env file
  chmod 600 $env_path
fi
